version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/.env"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/database/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-species_user} -d ${POSTGRES_DB:-species_monitoring}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    env_file:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/.env"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data

  backend:
    build:
      context: "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/backend"
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/.env"
    volumes:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/backend:/app"
      - uploads_data:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery:
    build:
      context: "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/backend"
      dockerfile: Dockerfile
    restart: unless-stopped
    command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info"]
    env_file:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/.env"
    volumes:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/backend:/app"
      - uploads_data:/app/uploads
    depends_on:
      - db
      - redis
      - backend

  frontend:
    build:
      context: "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/frontend"
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - "C:/Users/Donald NJILA/species_monitoring_app/species_monitoring_app_V2/.env"
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://backend:5000/api
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  default:
    driver: bridge
